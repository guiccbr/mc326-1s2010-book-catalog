MC326 - Projeto 1
Catálogo de Livros

Guilherme C. Camargo - RA 091387
Guilherme P. Gonçalves - RA 091429

DESCRIÇÃO DO PROJETO
	O objetivo do Projeto 1 era implementar um catálogo simples de livros,
explorando os princípios básicos da manipulação de arquivos com a linguagem C.
As informações dos arquivos, coletadas do site da Companhia das Letras [1]
deveriam ser armazenadas em arquivos especialmente formatados de forma a
facilitar a leitura e gravação de registros.
	Apesar da simplicidade do programa resultante, buscou-se torná-lo
facilmente extensível e adaptável, de forma a acomodar futuras implementações
de algoritmos vistos no decorrer do curso.
	Os registros utilizados correspondem às entradas da categoria
Histórias em Quadrinhos do site. Para cada registro, foram arquivados o
título, o ISBN, o assunto escolhido (a categoria História em Quadrinhos), o
autor, ano de publicação, um breve resumo e um ou mais personagens. Além
disso, uma imagem representativa da entrada foi salva.
	A entrega do Projeto consiste no código fonte do programa e seu
Makefile, uma pasta img contendo as imagens das obras catalogadas, e este
Relatório.

ESTRUTURA DO CÓDIGO FONTE
	Para facilitar o desenvolvimento do programa, o código fonte foi
separado na seguinte estrutura de diretórios:

			RAIZ
			├── include
			│   ├── books.h
			│   ├── interfaces.h
			│   ├── menus.h
			│   ├── catalog.h
			│   └── tools.h
			├── Makefile
			├── src
			│   ├── books.c
			│   ├── catalog.c
			│   ├── interfaces.c
			│   ├── main.c
			│   ├── menus.c
			│   └── tools.c
			└── test
			    ├── 1.sh
			    └── img
				└── 011200.png

	A pasta 'include' contém os headers relativos aos arquivos .c
que compõem o programa. O diretório 'src' contém as implementações das funções
descritas nos headers nos arquivos .c de mesmo nome.
	Os arquivos books.h e books.c correspondem à implementação da estrutura
que representa um livro em memória, bem como sua leitura e escrita em disco.
	Os arquivos catalog.h e catalog.c implementam o gerenciamento de
arquivos de catálogo.
	Os arquivos interfaces.h e interfaces.c implementam as interfaces interativa
e não-interativa do programa com o usuário.
	Os arquivos tools.h e tools.c implementam funções e definições comuns
a todo o programa, como a validação de caminhos de arquivo.
	Os arquivos menus.h e menus.c implementam menus de interação úteis a ambas as
interfaces.
	Finalmente, o arquivo main.c é responsável pela interpretação inicial
de parâmetros durante a chamada e ativação da interface correspondente.
	O diretório test foi criado para conter testes de conformidade do
programa final.	

DECISÕES DE DESENVOLVIMENTO
	Cabe comentar algumas das decisões tomadas pelo grupo sobre a
organização do desenvolvimento do programa.
	Para facilitar a cooperação do grupo, optou-se por utilizar um sistema
controle de versionamento. Após estudar algumas alternativas, a escolhida foi
o serviço de SVN cedido pelo Google Code. Assim, um projeto no Google Code
referente a este Projeto foi criado [2] e o serviço SVN associado foi
utilizado pelo grupo durante o desenvolvimento do programa final.
	Devido à visibilidade dada ao Projeto por sua livre disponibilidade na
internet, e pelo valor ilustrativo e educativo que este eventualmente
assumirá, decidiu-se desenvolver todo o código fonte em inglês.
	Por demanda do Projeto, todo o desenvolvimento foi feito em ambiente
Linux e não foram feitas considerações sobre portabilidade para outras
plataformas.

UTILIZAÇÃO DO PROGRAMA
	O programa suporta tanto uma interface interativa quanto uma não-interativa.
Para utilizar a interface interativa, deve-se passar a opção '-i':
	
	$ ./catalog -i

	O programa oferecerá as opções seguintes.
	A interface não-interativa permite uma utilização mais rápida do programa.
São suportadas as opções:

	-c [nome-do-catalogo]	para apenas criar um catálogo;
	-a [nome-do-catalogo]	para adicionar um livro ao catálogo;

	Após o parâmetro -a deverão ser passados os dados referentes ao livro:

	-A [Autor]
	-t [Título]
	-I [ISBN]
	-s [Sumário]
	-c [Personagens principais]	(pode-se usar uma lista separada por vírgulas)
	-y [Ano de publicação]
	-S [Assunto]
	-i [Arquivo de imagem]

	Se for usada a opção '-a', todos os parâmetros acima deverão ser passados.
O arquivo de imagem corresponde ao nome do arquivo .png, que deverá estar em uma 
pasta img no diretório atual.

COMENTÁRIOS SOBRE O PROJETO
	Ainda que o Projeto tenha, de forma geral, atingido maturidade suficiente
para que possa ser considerado estável, algumas funcionalidades não puderam ser
implementadas. Algumas dessas funcionalidades faltantes serão destacadas a seguir.
	Em primeiro lugar, o tratamento de erros no programa não é tão consistente
quanto deveria: mensagens de erro são frequentemente duplicadas ou omitidas, e erros
genéricos são lançados quando caberia um tratamento refinado da exceção.
	Esse problema está sendo avaliado e espera-se que as próximas versões do
Projeto implementem tratamentos mais robustos e flexíveis de erors em tempo de execução.
	Os testes para o programa não foram implementados em sua totalidade. A ideia
original consistia em utilizar um shell script que rodasse o programa com diversas
entradas e comparasse os catálogos resultantes aos esperados. No entanto, por falta
de tempo, apenas um teste simples (tests/1.sh) foi implementado, que roda o programa
com uma entrada válida para que sejam detectados erros graves que impossibilitem a
funcionalidade mínima desejada.
	Durante as etapas iniciais do desenvolvimento, o grupo cogitou
desenvolver a interface interativa utilizando a biblioteca NCurses, que possibilita grande
controle sobre o terminal utilizado pelo programa. Porém, devido à complexidade de tal
ferramenta e à falta de tempo para dominá-la, a ideia foi descartada para esta etapa do
Projeto. No entando, essa funcionalidade será estudada para as próximas fases do Projeto.
	Também merece atenção o tratamento da entrada do usuário. Após diversas implementa-
ções com diferentes graus de rigidez, optou-se por permitir, nos campos Autor, Título e 
Assunto apenas caracteres alfanuméricos e espaços. Tratamentos específicos foram feitos para
os demais campos. Caso tal política se prove demasiadamente restritiva, ela será reavaliada
nas próximas fases do Projeto.

REFERÊNCIAS
[1] http://www.companhiadasletras.com.br
[2] http://code.google.com/p/mc326-1s2010-book-catalog/
